{"version":3,"file":"static/js/594.00e1bad5.chunk.js","mappings":"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","sources":["webpack://project05_frontend_test/./src/components/shared/RecipePage/RecipePage.module.css?e036","components/shared/RecipePage/IngredientListItem.jsx","components/shared/RecipePage/IngredientList.jsx","components/shared/api/RecipeById/apiRecipeById.js","components/shared/RecipePage/RecipePage.jsx","pages/RecipePage/RecipePage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"recipe_container\":\"RecipePage_recipe_container__OmiOn\",\"recipe_details_main\":\"RecipePage_recipe_details_main__+3Cgd\",\"recipe_glass\":\"RecipePage_recipe_glass__27HhQ\",\"recipe_title\":\"RecipePage_recipe_title__wll0z\",\"recipe_about\":\"RecipePage_recipe_about__mctri\",\"add_button\":\"RecipePage_add_button__+cRKT\",\"drink_image\":\"RecipePage_drink_image__Gw++7\",\"recipe_details\":\"RecipePage_recipe_details__-9OHX\",\"recipe_ingredients_title\":\"RecipePage_recipe_ingredients_title__-3J7O\",\"recipe_ingredients\":\"RecipePage_recipe_ingredients__BJbzM\",\"ingredient_list\":\"RecipePage_ingredient_list__e0BTX\",\"ingredient_item\":\"RecipePage_ingredient_item__jQfYZ\",\"ingredient_photo\":\"RecipePage_ingredient_photo__CxgEN\",\"ingredient_title\":\"RecipePage_ingredient_title__uzFkh\",\"ingredient_information\":\"RecipePage_ingredient_information__8zAD0\",\"ingredient_measure\":\"RecipePage_ingredient_measure__8wnyS\",\"recipe_preparations_title\":\"RecipePage_recipe_preparations_title__ziG5-\",\"recipe_instructions\":\"RecipePage_recipe_instructions__iT7xW\",\"recipe_instructions_text\":\"RecipePage_recipe_instructions_text__jAipu\",\"recipe_preparations_info\":\"RecipePage_recipe_preparations_info__8EGXJ\",\"preparation_image\":\"RecipePage_preparation_image__7Wo7b\"};","import css from './RecipePage.module.css';\nimport glass from '../../../images/glass.jpg';\n\n\nconst IngredientListItem = ({\n  \n    ingredientThumb,\n    title,\n    measure\n  }) => {\n    return (\n        \n      <li className={css.ingredient_item}>\n\n      \n        <img  \n         \n         alt=\"coctail_ingredient\" className={css.ingredient_photo}\n          src={ingredientThumb? ingredientThumb: glass}\n         />\n          \n         \n          \n        <div className={css.ingredient_information}><h2 className={css.ingredient_title}>{title} </h2>\n        <p className={css.ingredient_measure}>{measure}</p>\n        </div>\n         </li>\n    );\n  };\n  export default IngredientListItem;\n","import IngredientListItem from './IngredientListItem.jsx';\nimport css from './RecipePage.module.css';\n// import { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from 'nanoid'\n\nconst IngredientList = ({ items = [] }) => {\n    const elements = items.map(({ ...props }) => (\n      <IngredientListItem \n        key ={nanoid()}\n       {...props} />\n    ));\n    return <ul className={css.ingredient_list}>{elements}</ul>;\n  };\n  export default IngredientList;\n","import axios from 'axios';\n\nexport default async function fetchDetails(recipeId) {\n  const token = localStorage.getItem('token');\n    // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjQzODgxOGJhM2I4YjlhZDk2NDJkOCIsImlhdCI6MTY5MzczMTQyOCwiZXhwIjoxNjk1NTQ1ODI4fQ.6Pg_b0OgFrpL1RasbRgkejnA77vNY_1RNPo4_GVOYIA'\n    const instance = axios.create({\n        baseURL: 'https://project05-backend.onrender.com',\n      });\n      \n      instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      const {data} = await instance.get(`/api/recipes/${recipeId}`);\n      console.log(data);\n       \n      return data;\n    // return fetch(\n      \n    //     `https://project05-backend.onrender.com/api/recipes/${recipeId}?`\n    // ).then(response => {\n    //   if (response.ok) {\n    //     console.log(response)\n    //     return response.json();\n    //   }\n    //   return Promise.reject(new Error(`recipe not found`));\n    // });\n  };\n","\n\nimport { useState, useEffect } from 'react';\nimport {\n//   Link,\n//   Outlet,\n  useParams,\n//   useNavigate,\n//   useLocation,\n} from 'react-router-dom';\nimport PreparationCocktail from '../../../images/PreparationCocktail.jpg';\n\nimport IngredientList from './IngredientList';\nimport css from './RecipePage.module.css';\nimport fetchDetails from '../api/RecipeById/apiRecipeById';\nimport cocktailGlass from '../../../images/cocktailglass.jpg';\n const RecipeDetails = ()=> {\n    // const recipeId = '639b6de9ff77d221f190c508'\n    const [recipe, setRecipe] = useState('');\n    const [loading, setLoading] = useState(false);\n  \n\n    const { recipeId } = useParams();\n\n  \n    \n      useEffect(() => {\n        if (recipeId === '') {\n          return;\n        }\n        fetchRecipeDetails();\n        console.log(recipeId);\n         // eslint-disable-next-line \n      }, [recipeId]);\n    \n      const fetchRecipeDetails = () => {\n        setLoading(true);\n        fetchDetails(recipeId).then(data => {\n        \n          setRecipe(data);\n          console.log(data);\n          setLoading(false);\n        });\n      };\n\n  \n      return (\n        <div className={css.recipe_container}>\n         \n          {loading && <div>...Loading</div>}\n          <div className={css.recipe_details}>\n          <div className={css.recipe_details_main}>\n          <p className={css.recipe_glass}>{recipe.glass}</p>\n          <h2 className={css.recipe_title}>{recipe.drink}</h2>\n          <p className={css.recipe_about}> { recipe.description? recipe.drink: \"Do you want to mix up some quick and easy cocktail at home? This recipe is for you.\"}  </p>\n          <button className={css.add_button} type =\"button\">         \n             Add to favorite recipe</button>\n          </div>\n          <img \n      \n                      src ={recipe.drinkThumb? recipe.drinkThumb: cocktailGlass}\n                   \n                      alt=\"drink_photo\"\n                      className={css.drink_image}\n                    />\n          </div>\n          <div className={css.recipe_ingredients}>\n          <p className={css.recipe_ingredients_title}>Ingredients</p>\n          <div className={css.recipe_ingredients_list}>\n          <IngredientList items={recipe.ingredients}/>\n          </div>\n\n          </div>\n          <div className={css.recipe_preparations}>\n          <h3 className={css.recipe_preparations_title}>Recipe Preparation</h3>\n          <div className={css.recipe_preparations_info}>\n          <div className={css.recipe_instructions}>\n            <p className={css.recipe_instructions_text}> {recipe.instructions}</p>\n          </div>\n          \n          <img \n                 src= {PreparationCocktail}\n                alt=\"drink_photo\"\n                className={css.preparation_image}/>\n          \n         \n</div>\n          </div>\n      </div>\n    );\n  }\n  export default RecipeDetails;","import RecipeDetails from \"components/shared/RecipePage/RecipePage\";\nconst RecipePageById =() => {\n  return(\n    <RecipeDetails />\n  )\n\n}\nexport default RecipePageById;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ingredientThumb","title","measure","className","css","ingredient_item","alt","ingredient_photo","src","glass","ingredient_information","ingredient_title","ingredient_measure","items","elements","map","props","nanoid","ingredient_list","recipeId","token","localStorage","getItem","instance","axios","create","baseURL","defaults","headers","common","get","data","console","log","useState","recipe","setRecipe","loading","setLoading","useParams","useEffect","fetchRecipeDetails","fetchDetails","then","recipe_container","recipe_details","recipe_details_main","recipe_glass","recipe_title","drink","recipe_about","description","add_button","type","drinkThumb","cocktailGlass","drink_image","recipe_ingredients","recipe_ingredients_title","recipe_ingredients_list","ingredients","recipe_preparations","recipe_preparations_title","recipe_preparations_info","recipe_instructions","recipe_instructions_text","instructions","PreparationCocktail","preparation_image","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}